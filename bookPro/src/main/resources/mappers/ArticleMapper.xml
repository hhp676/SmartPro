<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="domains.article.repository.ArticleDao">

    <!-- 为当前实体生成主键 -->
    <insert id="insertArticle" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_article
        (brief,title,content,author,publishDate,click,categoryId, imgnum, isdel, imgtype)
        VALUES
        (#{brief},#{title},#{content},#{author},#{publishDate},#{click},#{categoryId}, #{imgnum}, #{isDel}, #{imgType})
    </insert>

    <insert id="insertArticleTag" parameterType="java.util.List">
        INSERT INTO t_tag(name,articleId)
        VALUES
        <foreach collection ="list" item="tag" index= "index" separator =",">
            (#{tag.name},#{tag.articleId})
        </foreach>
    </insert>

    <update id="updateArticle">
            UPDATE t_article set content=(#{content}),click=#{click} ,publishDate =#{publishDate} where id=(#{id})
    </update>

    <delete id="deleteArticle">
        DELETE FROM t_article WHERE id=(#{id})
    </delete>

    <delete id="deleteTagByArticleId">
        DELETE FROM t_tag WHERE articleId= (#{articleId})
    </delete>

    <select id="getArticleById" resultType="domains.article.entity.Article">
        SELECT * FROM t_article WHERE id = (#{id})
    </select>

    <select id="getAllArticle" resultType="domains.article.entity.Article">
        SELECT id,title,brief,author,publishDate,click,categoryId,imgnum, isdel, imgtype FROM t_article
        <if test="author !=null and author !='' ">
            <where>
                AND author = (#{author})
            </where>
        </if>
        ORDER BY publishDate DESC
    </select>

    <!-- 关注点15：根据文章点击量获取X篇文章-->
    <select id="getArticleByClick" resultType="domains.article.entity.Article">
        SELECT * FROM t_article ORDER BY click DESC LIMIT 0,#{limit}
    </select>

    <!-- 关注点18：获取前一篇文章，那么条件 id < 当前文章id 的第一篇文章-->
    <!-- 但是小于号是不能直接出现在mybatis的配置文件中的，所以需要转义-->
    <select id="getPreviousArticle" resultType="domains.article.entity.Article">
        SELECT * FROM t_article where id &lt;  #{currentArticleId} ORDER BY id DESC limit 0,1
    </select>

    <select id="getNextArticle" resultType="domains.article.entity.Article">
        SELECT * FROM t_article where id &gt;  #{currentArticleId} ORDER BY id ASC limit 0,1
    </select>

    <select id="getTagsByArticleId" resultType="domains.article.entity.Tag">
        SELECT * FROM t_tag where articleId = #{articleId}
    </select>

    <!-- 关注点16 ： mybatis中使用模糊查询-->
    <select id="getSimilarTag" resultType="domains.article.entity.Tag">
        SELECT * FROM t_tag
        <where>
            <if test="tag1 !=null and tag1 !=''">
                and (name) LIKE concat(concat("%",#{tag1}),"%")
            </if>

       <!-- <if test="tag1 !=null and tag1 !=''">
            <where>
                and lower(name) LIKE concat(concat("%",#{tag1}),"%")
            </where>
        </if>-->
            <if test="tag2 !=null and tag2 !=''">
                OR lower(name) LIKE concat(concat("%",#{tag2}),"%")
            </if>
            <if test="tag3 !=null and tag3 !=''">
                OR lower(name) LIKE concat(concat("%",#{tag3}),"%")
            </if>
            <if test="tag4 !=null and tag4 !=''">
                OR lower(name) LIKE concat(concat("%",#{tag4}),"%")
            </if>
        </where>
        LIMIT 0,6
    </select>

    <select id="getRecommandArticleId" resultType="java.lang.Long">
        SELECT articleId FROM t_comment GROUP BY articleId
        ORDER BY count(content) DESC
        limit 0,5
    </select>

    <select id="getRecommandArtice" resultType="domains.article.entity.Article">
        SELECT * from t_article
        WHERE id in
        <foreach collection="list" item="articleId" open="(" close=")" separator=",">
            #{articleId}
        </foreach>
    </select>

    <select id="getArticleByCondition" resultType="domains.article.entity.Article">
        SELECT * from t_article
        <if test="author != null and author !=''">
            <where>
                and author = #{author}
            </where>
        </if>
        <if test="id !=null and id!=''">
            <where>
                id = #{id}
            </where>
        </if>
        <if test="condition !=null">
            <!-- 关注点17:动态排序 -->
            ORDER BY ${condition}
        </if>
        <if test="sort !=null">
            ${sort}
        </if>
    </select>
</mapper>