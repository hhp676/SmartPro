<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

    <!-- 本配置文件根据 resources/shiro.ini 编写 -->
    <!-- bean:myAjaxFilter-->
    <bean id="myAjaxFilter" class="domains.secutity.AjaxFilter"/>

    <!-- Shiro Filter 拦截器相关配置 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- securityManager -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 重新登录路径 -->
        <property name="loginUrl" value="/actions/security/login"/>

        <!-- 过滤链定义 -->
        <property name="filterChainDefinitions">
            <value><!-- 注意拦截顺序，从上往下依次设置-->
                /actions/comment/**=myAjaxFilter,perms[comment]
               <!-- /actions/article/readArticle/**=authc,perms[readArticle]-->
                /actions/home=authc,roles[admin],perms[enterSystem]
                /actions/article/postedit=authc,perms[postedit]
                /actions/home/logout=logout
            </value>
        </property>
        <property name="filters">
            <map>
                <entry key="myAjaxFilter" value-ref="myAjaxFilter"/>
            </map>
        </property>
    </bean>

    <!-- 凭证匹配器 -->
    <bean id="userCredentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>

    <!-- 自定义Realm实现 -->
    <bean id="userAuthorizingRealm" class="org.apache.shiro.realm.jdbc.JdbcRealm">
        <property name="dataSource" ref="dataSource"/>
        <property name="permissionsLookupEnabled" value="true"/>
        <property name="saltStyle" value="COLUMN"/>
        <property name="authenticationQuery" value="select password, concat(username,password_salt) from users where username = ?"/>
        <property name="userRolesQuery" value="select role from user_role ur join users u on u.id = ur.userId join roles r on ur.roleId = r.id where username = ?"/>
        <property name="permissionsQuery" value="select permission from roles r join role_permisssion rp on r.id = rp.roleId join permissions p on p.id = rp.permissionId where r.role = ?"/>
        <property name="credentialsMatcher" ref="userCredentialsMatcher"/>
    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realms" ref="userAuthorizingRealm"/>
    </bean>

    <!-- Shiro 生命周期处理器,，保证实现shiro内部的生命周期函数bean的执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

</beans>